DROP TABLE IF EXISTS PUBLIC.PERSON;
DROP TABLE IF EXISTS PUBLIC.DOCUMENT_IDENTIFICATION;
DROP TABLE IF EXISTS PUBLIC.PHONE;
DROP TABLE IF EXISTS PUBLIC.PHONE_DETAILS;
DROP TABLE IF EXISTS PUBLIC.ADDRESSES;
DROP TABLE IF EXISTS PUBLIC.CUSTOMERS;
DROP TABLE IF EXISTS PUBLIC.ORDERS;
DROP TABLE IF EXISTS PUBLIC.PRODUCTS;
DROP TABLE IF EXISTS PUBLIC.ORDER_ITEMS;

CREATE SEQUENCE IF NOT EXISTS PUBLIC.PERSON_SEQ;
CREATE SEQUENCE IF NOT EXISTS PUBLIC.DOCUMENT_ID_SEQ;

CREATE TABLE PUBLIC.PERSON(
   PERSON_ID BIGINT DEFAULT PERSON_SEQ.nextval,
   PERSON_FIRST_NAME VARCHAR(50) NOT NULL,
   PERSON_MIDDLE_NAME VARCHAR(50) NOT NULL,
   PERSON_LAST_NAME VARCHAR(50) NOT NULL,
   PRIMARY KEY (PERSON_ID)
);

CREATE TABLE PUBLIC.DOCUMENT_IDENTIFICATION(
    DOC_ID BIGINT DEFAULT DOCUMENT_ID_SEQ.nextval,
    DOC_SERIAL_NUMBER VARCHAR(30) NOT NULL,
    DOC_ISSUE_DATE DATE,
    DOC_EXPIRATION_DATE DATE,
    DOC_ISSUER_COUNTRY VARCHAR(25) NOT NULL,
    PERSON_ID Integer NOT NULL,
    PRIMARY KEY (DOC_ID),
    FOREIGN KEY (PERSON_ID) REFERENCES PUBLIC.PERSON
);

CREATE TABLE PUBLIC.PHONE(
    PHONE_ID Integer NOT NULL,
    PERSON_ID Integer,
    PHONE_NUMBER VARCHAR(50),
    PRIMARY KEY (PHONE_ID),
    FOREIGN KEY (PERSON_ID) REFERENCES PUBLIC.PERSON
);

CREATE TABLE PUBLIC.PHONE_DETAILS(
    PHONE_DETAILS_ID Integer NOT NULL,
    MANUFACTURER VARCHAR(50),
    MODEL VARCHAR(50),
    COLOR VARCHAR(50),
    PHONE_ID Integer NOT NULL,
    PRIMARY KEY (PHONE_DETAILS_ID),
    FOREIGN KEY (PHONE_ID) REFERENCES PUBLIC.PHONE
);

CREATE TABLE PUBLIC.ADDRESSES (
    ADDR_ID Integer NOT NULL,
    ADDR_NUMBER VARCHAR(50),
    ADDR_POSTAL_CODE VARCHAR(50),
    ADDR_STREET VARCHAR(255),
    PERSON_ID Integer NOT NULL,
    PRIMARY KEY (ADDR_ID),
    FOREIGN KEY (PERSON_ID) REFERENCES PUBLIC.PERSON

);


CREATE TABLE PUBLIC.CUSTOMERS(
   CUST_ID Integer NOT NULL,
   PERSON_ID Integer NOT NULL,
   PRIMARY KEY (CUST_ID),
   FOREIGN KEY (PERSON_ID) REFERENCES PUBLIC.PERSON
);


CREATE TABLE PUBLIC.ORDERS (
    ORDER_ID Integer NOT NULL,
    CUST_ID Integer,
    TOTAL_PRICE DOUBLE,
    ORDER_DESC VARCHAR(50),
    ORDER_DATE TIMESTAMP,
    LAST_UPDATED_TIME TIMESTAMP,
    PRIMARY KEY (ORDER_ID),
    FOREIGN KEY (CUST_ID) REFERENCES PUBLIC.CUSTOMERS
);

CREATE TABLE PUBLIC.PRODUCTS (
    PROD_ID Integer NOT NULL,
    PROD_NAME VARCHAR(60),
    PROD_DESC VARCHAR(80),
    REGULAR_PRICE DOUBLE,
    serialNumber VARCHAR(255),
    primary key (PROD_ID)
);

CREATE TABLE PUBLIC.ORDER_ITEMS (
    ORDER_ITEM_NUMBER INTEGER not null,
    ORDER_ID BIGINT not null,
    PROD_ID BIGINT,
    QUANTITY INTEGER,
    PRIMARY KEY (ORDER_ITEM_NUMBER),
    FOREIGN KEY (PROD_ID) REFERENCES PUBLIC.PRODUCTS,
    FOREIGN KEY (ORDER_ID) REFERENCES PUBLIC.ORDERS
);
